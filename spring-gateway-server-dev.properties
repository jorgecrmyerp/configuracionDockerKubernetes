spring.cloud.gateway.discovery.locator.lower-case-service-id=true
eureka.client.service-url.defaultZone=http://localhost:8761/eureka
##PARA ZIPKIN CON PONER LA URL EN EL CONFIG GENERAL VALE
##spring.zipkin.base-url=http://localhost:9411/
spring.sleuth.sampler.probability=1.0

spring.mvc.pathmatch.matching-strategy=ant-path-matcher


##aqui se definen como arrays
spring.cloud.gateway.routes[0].id=servicio-alumnos
##uri (LoadBalancer://)
spring.cloud.gateway.routes[0].uri=lb://servicio-alumnos
##path,es un map
spring.cloud.gateway.routes[0].predicates=Path=/api/alumnos/**
##parametros que no tendra en cuenta cuando haga la peticion al microservicio,elimina api y luego usuarios, por eso el 2
spring.cloud.gateway.routes[0].filters=StripPrefix=2

##aqui se definen como arrays
spring.cloud.gateway.routes[1].id=servicio-configuracion
##uri (LoadBalancer://)
spring.cloud.gateway.routes[1].uri=lb://servicio-configuracion
##path,es un map
spring.cloud.gateway.routes[1].predicates=Path=/api/configuracion/**
##parametros que no tendra en cuenta cuando haga la peticion al microservicio,elimina api y luego usuarios, por eso el 2
spring.cloud.gateway.routes[1].filters=StripPrefix=2


##aqui se definen como arrays
spring.cloud.gateway.routes[2].id=servicio-cursos
##uri (LoadBalancer://)
spring.cloud.gateway.routes[2].uri=lb://servicio-cursos
##path,es un map
spring.cloud.gateway.routes[2].predicates=Path=/api/cursos/**
##parametros que no tendra en cuenta cuando haga la peticion al microservicio,elimina api y luego usuarios, por eso el 2
spring.cloud.gateway.routes[2].filters=StripPrefix=2